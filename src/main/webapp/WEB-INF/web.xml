<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name>Archetype Created Web Application</display-name>
	<!-- 设置spring容器配置文件的位置 -->
	<!-- <context-param> <param-name>contextConfigLocation</param-name> <param-value>classpath:/spring-config/spring.xml</param-value> 
		</context-param> -->

	<!-- 配置ContextLoaderListener表示该工程要以spring的方式启动。 如果没有设置上下文配置的路径启动时会默认在/WEB-INF目录下查找applicationContext.xml作为spring容器的配置文件， 
		但是可以自己设置spring容器配置文件的位置 在spring容器的配置文件中可以初始化一些bean，如DataSource -->
	<!-- <listener> <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> 
		</listener> -->

	<!-- 字符集 过滤器 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 配置DispatcherServlet表示，该工程将采用springmvc的方式。 如果没有初始化springmvc配置文件的位置，启动时也会默认在/WEB-INF目录下查找XXX-servlet.xml作为配置文件， 
		XXX就是DispatcherServlet的名字。但是也可以自己定义springmvc配置文件的位置 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/conf/spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/conf/log4j.properties</param-value>
	</context-param>
	<listener>
		<listener-class>com.sfpy.listener</listener-class>   
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<welcome-file-list>
		<welcome-file>login.html</welcome-file>
	</welcome-file-list>

</web-app>